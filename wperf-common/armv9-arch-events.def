// BSD 3-Clause License
//
// Copyright (c) 2024, Arm Limited
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// 1. Redistributions of source code must retain the above copyright notice, this
//    list of conditions and the following disclaimer.
//
// 2. Redistributions in binary form must reproduce the above copyright notice,
//    this list of conditions and the following disclaimer in the documentation
//    and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived from
//    this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
// CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
// OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SW_INCR,                                          0x0000, "sw_incr",                                       "Instruction architecturally executed, condition code check pass, software increment")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1I_CACHE_REFILL,                                 0x0001, "l1i_cache_refill",                              "Level 1 instruction cache refill")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1I_TLB_REFILL,                                   0x0002, "l1i_tlb_refill",                                "Level 1 instruction TLB refill")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1D_CACHE_REFILL,                                 0x0003, "l1d_cache_refill",                              "Level 1 data cache refill")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1D_CACHE,                                        0x0004, "l1d_cache",                                     "Level 1 data cache access")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1D_TLB_REFILL,                                   0x0005, "l1d_tlb_refill",                                "Level 1 data TLB refill")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      LD_RETIRED,                                       0x0006, "ld_retired",                                    "Instruction architecturally executed, condition code check pass, load")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ST_RETIRED,                                       0x0007, "st_retired",                                    "Instruction architecturally executed, condition code check pass, store")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      INST_RETIRED,                                     0x0008, "inst_retired",                                  "Instruction architecturally executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      EXC_TAKEN,                                        0x0009, "exc_taken",                                     "Exception taken")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      EXC_RETURN,                                       0x000a, "exc_return",                                    "Instruction architecturally executed, condition code check pass, exception return")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      CID_WRITE_RETIRED,                                0x000b, "cid_write_retired",                             "Instruction architecturally executed, condition code check pass, write to CONTEXTIDR")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      PC_WRITE_RETIRED,                                 0x000c, "pc_write_retired",                              "Instruction architecturally executed, condition code check pass, software change of the PC")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BR_IMMED_RETIRED,                                 0x000d, "br_immed_retired",                              "Instruction architecturally executed, immediate branch")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BR_RETURN_RETIRED,                                0x000e, "br_return_retired",                             "Instruction architecturally executed, condition code check pass, procedure return")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      UNALIGNED_LDST_RETIRED,                           0x000f, "unaligned_ldst_retired",                        "Instruction architecturally executed, condition code check pass, unaligned")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BR_MIS_PRED,                                      0x0010, "br_mis_pred",                                   "Mispredicted or not predicted branch speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      CPU_CYCLES,                                       0x0011, "cpu_cycles",                                    "Cycle")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BR_PRED,                                          0x0012, "br_pred",                                       "Predictable branch speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      MEM_ACCESS,                                       0x0013, "mem_access",                                    "Data memory access")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1I_CACHE,                                        0x0014, "l1i_cache",                                     "Level 1 instruction cache access")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1D_CACHE_WB,                                     0x0015, "l1d_cache_wb",                                  "Level 1 data cache write-back")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L2D_CACHE,                                        0x0016, "l2d_cache",                                     "Level 2 data cache access")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L2D_CACHE_REFILL,                                 0x0017, "l2d_cache_refill",                              "Level 2 data cache refill")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L2D_CACHE_WB,                                     0x0018, "l2d_cache_wb",                                  "Level 2 data cache write-back")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BUS_ACCESS,                                       0x0019, "bus_access",                                    "Bus access")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      MEMORY_ERROR,                                     0x001a, "memory_error",                                  "Local memory error")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      INST_SPEC,                                        0x001b, "inst_spec",                                     "Operation speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      TTBR_WRITE_RETIRED,                               0x001c, "ttbr_write_retired",                            "Instruction architecturally executed, condition code check pass, write to TTBR")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BUS_CYCLES,                                       0x001d, "bus_cycles",                                    "Bus cycle")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      CHAIN,                                            0x001e, "chain",                                         "For odd-numbered counters, increments the count by one for each overflow of the preceding even-numbered counter. For even-numbered counters there is no increment")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1D_CACHE_ALLOCATE,                               0x001f, "l1d_cache_allocate",                            "Level 1 data cache allocation without refill")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L2D_CACHE_ALLOCATE,                               0x0020, "l2d_cache_allocate",                            "Level 2 data cache allocation without refill")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BR_RETIRED,                                       0x0021, "br_retired",                                    "Instruction architecturally executed, branch")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BR_MIS_PRED_RETIRED,                              0x0022, "br_mis_pred_retired",                           "Instruction architecturally executed, mispredicted branch")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      STALL_FRONTEND,                                   0x0023, "stall_frontend",                                "No operation issued due to the front end")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      STALL_BACKEND,                                    0x0024, "stall_backend",                                 "No operation issued due to the back end")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1D_TLB,                                          0x0025, "l1d_tlb",                                       "Level 1 data or unified TLB access")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1I_TLB,                                          0x0026, "l1i_tlb",                                       "Level 1 instruction TLB access")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L2I_CACHE,                                        0x0027, "l2i_cache",                                     "Attributable Level 2 instruction cache access")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L2I_CACHE_REFILL,                                 0x0028, "l2i_cache_refill",                              "Attributable Level 2 instruction cache refill")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L3D_CACHE_ALLOCATE,                               0x0029, "l3d_cache_allocate",                            "Attributable Level 3 data or unified cache allocation without refill")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L3D_CACHE_REFILL,                                 0x002a, "l3d_cache_refill",                              "Attributable Level 3 data or unified cache refill")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L3D_CACHE,                                        0x002b, "l3d_cache",                                     "Attributable Level 3 data or unified cache access")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L3D_CACHE_WB,                                     0x002c, "l3d_cache_wb",                                  "Attributable Level 3 data or unified cache write-back")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L2D_TLB_REFILL,                                   0x002d, "l2d_tlb_refill",                                "Attributable Level 2 data or unified TLB refill")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L2I_TLB_REFILL,                                   0x002e, "l2i_tlb_refill",                                "Attributable Level 2 instruction TLB refill")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L2D_TLB,                                          0x002f, "l2d_tlb",                                       "Attributable Level 2 data or unified TLB access")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L2I_TLB,                                          0x0030, "l2i_tlb",                                       "Attributable Level 2 instruction TLB access")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      REMOTE_ACCESS,                                    0x0031, "remote_access",                                 "Attributable access to another socket in a multi-socket system")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      LL_CACHE,                                         0x0032, "ll_cache",                                      "Attributable Last Level data cache access")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      LL_CACHE_MISS,                                    0x0033, "ll_cache_miss",                                 "Attributable Last level data or unified cache miss")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      DTLB_WALK,                                        0x0034, "dtlb_walk",                                     "Attributable data or unified TLB access with at least one translation table walk")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ITLB_WALK,                                        0x0035, "itlb_walk",                                     "Attributable instruction TLB access with at least one translation table walk")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      LL_CACHE_RD,                                      0x0036, "ll_cache_rd",                                   "Attributable Last Level cache memory read")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      LL_CACHE_MISS_RD,                                 0x0037, "ll_cache_miss_rd",                              "Attributable Last Level cache memory read miss")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      REMOTE_ACCESS_RD,                                 0x0038, "remote_access_rd",                              "Attributable memory read access to another socket in a multi-socket system")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1D_CACHE_LMISS_RD,                               0x0039, "l1d_cache_lmiss_rd",                            "Level 1 data cache long-latency read miss")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      OP_RETIRED,                                       0x003a, "op_retired",                                    "Micro-operation architecturally executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      OP_SPEC,                                          0x003b, "op_spec",                                       "Micro-operation Speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      STALL,                                            0x003c, "stall",                                         "No operation sent for execution")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      STALL_SLOT_BACKEND,                               0x003d, "stall_slot_backend",                            "No operation sent for execution on a Slot due to the backend")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      STALL_SLOT_FRONTEND,                              0x003e, "stall_slot_frontend",                           "No operation send for execution on a Slot due to the frontend")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      STALL_SLOT,                                       0x003f, "stall_slot",                                    "No operation sent for execution on a Slot")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1D_CACHE_RD,                                     0x0040, "l1d_cache_rd",                                  "Level 1 data cache access, read")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1D_CACHE_WR,                                     0x0041, "l1d_cache_wr",                                  "Level 1 data cache access, write")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1D_CACHE_REFILL_RD,                              0x0042, "l1d_cache_refill_rd",                           "Level 1 data cache refill, read")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1D_CACHE_REFILL_WR,                              0x0043, "l1d_cache_refill_wr",                           "Level 1 data cache refill, write")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1D_CACHE_REFILL_INNER,                           0x0044, "l1d_cache_refill_inner",                        "Level 1 data cache refill, inner")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1D_CACHE_REFILL_OUTER,                           0x0045, "l1d_cache_refill_outer",                        "Level 1 data cache refill, outer")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1D_CACHE_WB_VICTIM,                              0x0046, "l1d_cache_wb_victim",                           "Level 1 data cache write-back, victim")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1D_CACHE_WB_CLEAN,                               0x0047, "l1d_cache_wb_clean",                            "Level 1 data cache write-back, cleaning and coherency")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1D_CACHE_INVAL,                                  0x0048, "l1d_cache_inval",                               "Level 1 data cache invalidate")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1D_TLB_REFILL_RD,                                0x004c, "l1d_tlb_refill_rd",                             "Level 1 data TLB refill, read")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1D_TLB_REFILL_WR,                                0x004d, "l1d_tlb_refill_wr",                             "Level 1 data TLB refill, write")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1D_TLB_RD,                                       0x004e, "l1d_tlb_rd",                                    "Level 1 data or unified TLB access, read")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1D_TLB_WR,                                       0x004f, "l1d_tlb_wr",                                    "Level 1 data or unified TLB access, write")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L2D_CACHE_RD,                                     0x0050, "l2d_cache_rd",                                  "Level 2 data cache access, read")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L2D_CACHE_WR,                                     0x0051, "l2d_cache_wr",                                  "Level 2 data cache access, write")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L2D_CACHE_REFILL_RD,                              0x0052, "l2d_cache_refill_rd",                           "Level 2 data cache refill, read")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L2D_CACHE_REFILL_WR,                              0x0053, "l2d_cache_refill_wr",                           "Level 2 data cache refill, write")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L2D_CACHE_WB_VICTIM,                              0x0056, "l2d_cache_wb_victim",                           "Level 2 data cache write-back, victim")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L2D_CACHE_WB_CLEAN,                               0x0057, "l2d_cache_wb_clean",                            "Level 2 data cache write-back, cleaning and coherency")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L2D_CACHE_INVAL,                                  0x0058, "l2d_cache_inval",                               "Level 2 data cache invalidate")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L2D_TLB_REFILL_RD,                                0x005c, "l2d_tlb_refill_rd",                             "Attributable Level 2 data or unified TLB refill, read")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L2D_TLB_REFILL_WR,                                0x005d, "l2d_tlb_refill_wr",                             "Attributable Level 2 data or unified TLB refill, write")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L2D_TLB_RD,                                       0x005e, "l2d_tlb_rd",                                    "Attributable Level 2 data or unified TLB access, read")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L2D_TLB_WR,                                       0x005f, "l2d_tlb_wr",                                    "Attributable Level 2 data or unified TLB access, write")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BUS_ACCESS_RD,                                    0x0060, "bus_access_rd",                                 "Bus access, read")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BUS_ACCESS_WR,                                    0x0061, "bus_access_wr",                                 "Bus access, write")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BUS_ACCESS_SHARED,                                0x0062, "bus_access_shared",                             "Bus access, Normal, Cacheable, Shareable")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BUS_ACCESS_NOT_SHARED,                            0x0063, "bus_access_not_shared",                         "Bus access, not Normal, Cacheable, Shareable")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BUS_ACCESS_NORMAL,                                0x0064, "bus_access_normal",                             "Bus access, normal")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BUS_ACCESS_PERIPH,                                0x0065, "bus_access_periph",                             "Bus access, peripheral")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      MEM_ACCESS_RD,                                    0x0066, "mem_access_rd",                                 "Data memory access, read")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      MEM_ACCESS_WR,                                    0x0067, "mem_access_wr",                                 "Data memory access, write")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      UNALIGNED_LD_SPEC,                                0x0068, "unaligned_ld_spec",                             "Unaligned access, read")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      UNALIGNED_ST_SPEC,                                0x0069, "unaligned_st_spec",                             "Unaligned access, write")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      UNALIGNED_LDST_SPEC,                              0x006a, "unaligned_ldst_spec",                           "Unaligned access")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      LDREX_SPEC,                                       0x006c, "ldrex_spec",                                    "Exclusive operation speculatively executed, LDREX or LDX")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      STREX_PASS_SPEC,                                  0x006d, "strex_pass_spec",                               "Exclusive operation speculatively executed, STREX or STX pass")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      STREX_FAIL_SPEC,                                  0x006e, "strex_fail_spec",                               "Exclusive operation speculatively executed, STREX or STX pass")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      STREX_SPEC,                                       0x006f, "strex_spec",                                    "Exclusive operation speculatively executed, STREX or STX")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      LD_SPEC,                                          0x0070, "ld_spec",                                       "Operation speculatively executed, load")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ST_SPEC,                                          0x0071, "st_spec",                                       "Operation speculatively executed, store")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      LDST_SPEC,                                        0x0072, "ldst_spec",                                     "Operation speculatively executed, load or store")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      DP_SPEC,                                          0x0073, "dp_spec",                                       "Operation speculatively executed, integer data-processing")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SPEC,                                         0x0074, "ase_spec",                                      "Operation speculatively executed, Advanced SIMD instruction")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      VFP_SPEC,                                         0x0075, "vfp_spec",                                      "Operation speculatively executed, floating-point instruction")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      PC_WRITE_SPEC,                                    0x0076, "pc_write_spec",                                 "Operation speculatively executed, software change of the PC")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      CRYPTO_SPEC,                                      0x0077, "crypto_spec",                                   "Operation speculatively executed, Cryptographic instruction")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BR_IMMED_SPEC,                                    0x0078, "br_immed_spec",                                 "Branch speculatively executed, immediate branch")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BR_RETURN_SPEC,                                   0x0079, "br_return_spec",                                "Branch speculatively executed, procedure return")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BR_INDIRECT_SPEC,                                 0x007a, "br_indirect_spec",                              "Branch speculatively executed, indirect branch")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ISB_SPEC,                                         0x007c, "isb_spec",                                      "Barrier speculatively executed, ISB")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      DSB_SPEC,                                         0x007d, "dsb_spec",                                      "Barrier speculatively executed, DSB")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      DMB_SPEC,                                         0x007e, "dmb_spec",                                      "Barrier speculatively executed, DMB")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      EXC_UNDEF,                                        0x0081, "exc_undef",                                     "Exception taken, Other synchronous")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      EXC_SVC,                                          0x0082, "exc_svc",                                       "Exception taken, Supervisor Call")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      EXC_PABORT,                                       0x0083, "exc_pabort",                                    "Exception taken, Instruction Abort")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      EXC_DABORT,                                       0x0084, "exc_dabort",                                    "Exception taken, Data Abort and SError")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      EXC_IRQ,                                          0x0086, "exc_irq",                                       "Exception taken, IRQ")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      EXC_FIQ,                                          0x0087, "exc_fiq",                                       "Exception taken, FIQ")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      EXC_SMC,                                          0x0088, "exc_smc",                                       "Exception taken, Secure Monitor Call")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      EXC_HVC,                                          0x008a, "exc_hvc",                                       "Exception taken, Hypervisor Call")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      EXC_TRAP_PABORT,                                  0x008b, "exc_trap_pabort",                               "Exception taken, Instruction Abort not taken locally")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      EXC_TRAP_DABORT,                                  0x008c, "exc_trap_dabort",                               "Exception taken, Data Abort or SError not taken locally")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      EXC_TRAP_OTHER,                                   0x008d, "exc_trap_other",                                "Exception taken, Other traps not taken locally")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      EXC_TRAP_IRQ,                                     0x008e, "exc_trap_irq",                                  "Exception taken, IRQ not taken locally")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      EXC_TRAP_FIQ,                                     0x008f, "exc_trap_fiq",                                  "Exception taken, FIQ not taken locally")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      RC_LD_SPEC,                                       0x0090, "rc_ld_spec",                                    "Release consistency operation speculatively executed, Load-Acquire")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      RC_ST_SPEC,                                       0x0091, "rc_st_spec",                                    "Release consistency operation speculatively executed, Store-Release")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L3D_CACHE_RD,                                     0x00a0, "l3d_cache_rd",                                  "Attributable Level 3 data or unified cache access, read")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L3D_CACHE_WR,                                     0x00a1, "l3d_cache_wr",                                  "Attributable Level 3 data or unified cache access, write")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L3D_CACHE_REFILL_RD,                              0x00a2, "l3d_cache_refill_rd",                           "Attributable Level 3 data or unified cache refill, read")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L3D_CACHE_REFILL_WR,                              0x00a3, "l3d_cache_refill_wr",                           "Attributable Level 3 data or unified cache refill, write")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L3D_CACHE_WB_VICTIM,                              0x00a6, "l3d_cache_wb_victim",                           "Attributable Level 3 data or unified cache write-back, victim")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L3D_CACHE_WB_CLEAN,                               0x00a7, "l3d_cache_wb_clean",                            "Attributable Level 3 data or unified cache write-back, cache clean")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L3D_CACHE_INVAL,                                  0x00a8, "l3d_cache_inval",                               "Attributable Level 3 data or unified cache access, invalidate")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SAMPLE_POP,                                       0x4000, "sample_pop",                                    "Sample Population")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SAMPLE_FEED,                                      0x4001, "sample_feed",                                   "Sample Taken")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SAMPLE_FILTRATE,                                  0x4002, "sample_filtrate",                               "Sample Taken and not removed by filtering")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SAMPLE_COLLISION,                                 0x4003, "sample_collision",                              "Sample collided with previous sample")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      CNT_CYCLES,                                       0x4004, "cnt_cycles",                                    "Constant frequency cycles")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      STALL_BACKEND_MEM,                                0x4005, "stall_backend_mem",                             "Memory stall cycles")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1I_CACHE_LMISS,                                  0x4006, "l1i_cache_lmiss",                               "Level 1 instruction cache long-latency read miss")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L2D_CACHE_LMISS_RD,                               0x4009, "l2d_cache_lmiss_rd",                            "Level 2 data cache long-latency read miss")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L2I_CACHE_LMISS,                                  0x400a, "l2i_cache_lmiss",                               "Level 2 instruction cache long-latency read miss")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L3D_CACHE_LMISS_RD,                               0x400b, "l3d_cache_lmiss_rd",                            "Level 3 data cache long-latency read miss")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      TRB_WRAP,                                         0x400c, "trb_wrap",                                      "Trace buffer current write pointer wrapped")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      PMU_OVFS,                                         0x400d, "pmu_ovfs",                                      "PMU overflow, counters accessible to EL1 and EL0")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      TRB_TRIG,                                         0x400e, "trb_trig",                                      "Trace buffer Trigger Event")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      PMU_HOVFS,                                        0x400f, "pmu_hovfs",                                     "PMU overflow, counters reserved for use by EL2")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      TRCEXTOUT0,                                       0x4010, "trcextout0",                                    "PE Trace Unit external output 0")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      TRCEXTOUT1,                                       0x4011, "trcextout1",                                    "PE Trace Unit external output 1")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      TRCEXTOUT2,                                       0x4012, "trcextout2",                                    "PE Trace Unit external output 2")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      TRCEXTOUT3,                                       0x4013, "trcextout3",                                    "PE Trace Unit external output 3")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      CTI_TRIGOUT4,                                     0x4018, "cti_trigout4",                                  "Cross-trigger Interface output trigger 4")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      CTI_TRIGOUT5,                                     0x4019, "cti_trigout5",                                  "Cross-trigger Interface output trigger 5 ")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      CTI_TRIGOUT6,                                     0x401a, "cti_trigout6",                                  "Cross-trigger Interface output trigger 6")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      CTI_TRIGOUT7,                                     0x401b, "cti_trigout7",                                  "Cross-trigger Interface output trigger 7")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      LDST_ALIGN_LAT,                                   0x4020, "ldst_align_lat",                                "Access with additional latency from alignment")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      LD_ALIGN_LAT,                                     0x4021, "ld_align_lat",                                  "Load with additional latency from alignment")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ST_ALIGN_LAT,                                     0x4022, "st_align_lat",                                  "Store with additional latency from alignment")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      MEM_ACCESS_CHECKED,                               0x4024, "mem_access_checked",                            "Checked data memory access")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      MEM_ACCESS_CHECKED_RD,                            0x4025, "mem_access_checked_rd",                         "Checked data memory access, read")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      MEM_ACCESS_CHECKED_WR,                            0x4026, "mem_access_checked_wr",                         "Checked data memory access, write")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SIMD_INST_RETIRED,                                0x8000, "simd_inst_retired",                             "SIMD instructions architecturally executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_INST_RETIRED,                                 0x8001, "ase_inst_retired",                              "ASE instructions architecturally executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_INST_RETIRED,                                 0x8002, "sve_inst_retired",                              "SVE instructions architecturally executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_INST_RETIRED,                             0x8003, "ase_sve_inst_retired",                          "ASE and SVE instructions architecturally executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SIMD_INST_SPEC,                                   0x8004, "simd_inst_spec",                                "SIMD operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_INST_SPEC,                                    0x8005, "ase_inst_spec",                                 "ASE operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_INST_SPEC,                                    0x8006, "sve_inst_spec",                                 "SVE operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_INST_SPEC,                                0x8007, "ase_sve_inst_spec",                             "ASE and SVE operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      UOP_SPEC,                                         0x8008, "uop_spec",                                      "Any +ALU--ops speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_UOP_SPEC,                                     0x8009, "ase_uop_spec",                                  "ASE +ALU--ops speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_UOP_SPEC,                                     0x800a, "sve_uop_spec",                                  "SVE +ALU--ops speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_UOP_SPEC,                                 0x800b, "ase_sve_uop_spec",                              "ASE and SVE +ALU--ops speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SIMD_UOP_SPEC,                                    0x800c, "simd_uop_spec",                                 "SIMD +ALU--ops speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_MATH_SPEC,                                    0x800e, "sve_math_spec",                                 "SVE math operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      FP_SPEC,                                          0x8010, "fp_spec",                                       "Floating-point operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_FP_SPEC,                                      0x8011, "ase_fp_spec",                                   "ASE floating-point operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_FP_SPEC,                                      0x8012, "sve_fp_spec",                                   "SVE floating-point operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_FP_SPEC,                                  0x8013, "ase_sve_fp_spec",                               "ASE and SVE floating-point operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      FP_HP_SPEC,                                       0x8014, "fp_hp_spec",                                    "Floating-point half-precision operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_FP_HP_SPEC,                                   0x8015, "ase_fp_hp_spec",                                "ASE floating-point half-precision operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_FP_HP_SPEC,                                   0x8016, "sve_fp_hp_spec",                                "SVE floating-point half-precision operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_FP_HP_SPEC,                               0x8017, "ase_sve_fp_hp_spec",                            "ASE and SVE floating-point half-precision operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      FP_SP_SPEC,                                       0x8018, "fp_sp_spec",                                    "Floating-point single-precision operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_FP_SP_SPEC,                                   0x8019, "ase_fp_sp_spec",                                "ASE floating-point single-precision operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_FP_SP_SPEC,                                   0x801a, "sve_fp_sp_spec",                                "SVE floating-point single-precision operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_FP_SP_SPEC,                               0x801b, "ase_sve_fp_sp_spec",                            "ASE and SVE floating-point single-precision operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      FP_DP_SPEC,                                       0x801c, "fp_dp_spec",                                    "Floating-point double-precision operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_FP_DP_SPEC,                                   0x801d, "ase_fp_dp_spec",                                "ASE floating-point double-precision operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_FP_DP_SPEC,                                   0x801e, "sve_fp_dp_spec",                                "SVE floating-point double-precision operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_FP_DP_SPEC,                               0x801f, "ase_sve_fp_dp_spec",                            "ASE and SVE floating-point double-precision operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      FP_DIV_SPEC,                                      0x8020, "fp_div_spec",                                   "Floating-point divide operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_FP_DIV_SPEC,                                  0x8021, "ase_fp_div_spec",                               "ASE floating-point divide operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_FP_DIV_SPEC,                                  0x8022, "sve_fp_div_spec",                               "SVE floating-point divide operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_FP_DIV_SPEC,                              0x8023, "ase_sve_fp_div_spec",                           "ASE and SVE floating-point divide operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      FP_SQRT_SPEC,                                     0x8024, "fp_sqrt_spec",                                  "Floating-point square-root operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_FP_SQRT_SPEC,                                 0x8025, "ase_fp_sqrt_spec",                              "ASE floating-point square-root operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_FP_SQRT_SPEC,                                 0x8026, "sve_fp_sqrt_spec",                              "SVE floating-point square-root operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_FP_SQRT_SPEC,                             0x8027, "ase_sve_fp_sqrt_spec",                          "ASE and SVE floating-point square-root operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      FP_FMA_SPEC,                                      0x8028, "fp_fma_spec",                                   "Floating-point FMA operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_FP_FMA_SPEC,                                  0x8029, "ase_fp_fma_spec",                               "ASE floating-point FMA operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_FP_FMA_SPEC,                                  0x802a, "sve_fp_fma_spec",                               "SVE floating-point FMA operation s speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_FP_FMA_SPEC,                              0x802b, "ase_sve_fp_fma_spec",                           "ASE and SVE floating-point FMA operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      FP_MUL_SPEC,                                      0x802c, "fp_mul_spec",                                   "Floating-point multiply operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_FP_MUL_SPEC,                                  0x802d, "ase_fp_mul_spec",                               "ASE floating-point multiply operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_FP_MUL_SPEC,                                  0x802e, "sve_fp_mul_spec",                               "SVE floating-point multiply operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_FP_MUL_SPEC,                              0x802f, "ase_sve_fp_mul_spec",                           "ASE and SVE floating-point multiply operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      FP_ADDSUB_SPEC,                                   0x8030, "fp_addsub_spec",                                "Floating-point add & subtract operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_FP_ADDSUB_SPEC,                               0x8031, "ase_fp_addsub_spec",                            "ASE floating-point add & subtract operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_FP_ADDSUB_SPEC,                               0x8032, "sve_fp_addsub_spec",                            "SVE floating-point add & subtract operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_FP_ADDSUB_SPEC,                           0x8033, "ase_sve_fp_addsub_spec",                        "ASE and SVE floating-point add & subtract operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      FP_RECPE_SPEC,                                    0x8034, "fp_recpe_spec",                                 "Floating-point reciprocal estimate operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_FP_RECPE_SPEC,                                0x8035, "ase_fp_recpe_spec",                             "ASE floating-point reciprocal estimate operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_FP_RECPE_SPEC,                                0x8036, "sve_fp_recpe_spec",                             "SVE floating-point reciprocal estimate operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_FP_RECPE_SPEC,                            0x8037, "ase_sve_fp_recpe_spec",                         "ASE and SVE floating-point reciprocal estimate operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      FP_CVT_SPEC,                                      0x8038, "fp_cvt_spec",                                   "Floating-point convert operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_FP_CVT_SPEC,                                  0x8039, "ase_fp_cvt_spec",                               "ASE floating-point convert operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_FP_CVT_SPEC,                                  0x803a, "sve_fp_cvt_spec",                               "SVE floating-point convert operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_FP_CVT_SPEC,                              0x803b, "ase_sve_fp_cvt_spec",                           "ASE and SVE floating-point convert operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_FP_AREDUCE_SPEC,                              0x803c, "sve_fp_areduce_spec",                           "SVE floating-point accumulating reduction operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_FP_PREDUCE_SPEC,                              0x803d, "ase_fp_preduce_spec",                           "ASE floating-point pairwise add step operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_FP_VREDUCE_SPEC,                              0x803e, "sve_fp_vreduce_spec",                           "SVE floating-point vector reduction operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_FP_VREDUCE_SPEC,                          0x803f, "ase_sve_fp_vreduce_spec",                       "ASE and SVE floating-point vector reduction operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      INT_SPEC,                                         0x8040, "int_spec",                                      "Integer operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_INT_SPEC,                                     0x8041, "ase_int_spec",                                  "ASE integer operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_INT_SPEC,                                     0x8042, "sve_int_spec",                                  "SVE integer operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_INT_SPEC,                                 0x8043, "ase_sve_int_spec",                              "ASE and SVE integer operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      INT_DIV_SPEC,                                     0x8044, "int_div_spec",                                  "Integer divide operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      INT_DIV64_SPEC,                                   0x8045, "int_div64_spec",                                "Integer 64-bit divide operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_INT_DIV_SPEC,                                 0x8046, "sve_int_div_spec",                              "SVE  integer divide operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_INT_DIV64_SPEC,                               0x8047, "sve_int_div64_spec",                            "SVE integer 64-bit divide operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      INT_MUL_SPEC,                                     0x8048, "int_mul_spec",                                  "Integer multiply operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_INT_MUL_SPEC,                                 0x8049, "ase_int_mul_spec",                              "ASE integer multiply operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_INT_MUL_SPEC,                                 0x804a, "sve_int_mul_spec",                              "SVE integer multiply operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_INT_MUL_SPEC,                             0x804b, "ase_sve_int_mul_spec",                          "ASE and SVE integer multiply operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      INT_MUL64_SPEC,                                   0x804c, "int_mul64_spec",                                "Integer 64-bit multiply operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_INT_MUL64_SPEC,                               0x804d, "sve_int_mul64_spec",                            "SVE integer 64-bit multiply operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      INT_MULH64_SPEC,                                  0x804e, "int_mulh64_spec",                               "Integer 64-bit multiply high part operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_INT_MULH64_SPEC,                              0x804f, "sve_int_mulh64_spec",                           "SVE integer 64-bit multiply high part operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      NONFP_SPEC,                                       0x8058, "nonfp_spec",                                    "Non-floating-point operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_NONFP_SPEC,                                   0x8059, "ase_nonfp_spec",                                "ASE non-floating-point operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_NONFP_SPEC,                                   0x805a, "sve_nonfp_spec",                                "SVE non-floating operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_NONFP_SPEC,                               0x805b, "ase_sve_nonfp_spec",                            "ASE and SVE non-floating-point operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_INT_VREDUCE_SPEC,                             0x805d, "ase_int_vreduce_spec",                          "ASE integer vector reduction operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_INT_VREDUCE_SPEC,                             0x805e, "sve_int_vreduce_spec",                          "SVE integer reduction operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_INT_VREDUCE_SPEC,                         0x805f, "ase_sve_int_vreduce_spec",                      "ASE and SVE integer reduction operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_PERM_SPEC,                                    0x8060, "sve_perm_spec",                                 "SVE permute operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_PERM_IGRANULE_SPEC,                           0x8061, "sve_perm_igranule_spec",                        "SVE intra-granule permute operations speculatively")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_PERM_XGRANULE_SPEC,                           0x8062, "sve_perm_xgranule_spec",                        "SVE cross-granule permute operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_PERM_VARIABLE_SPEC,                           0x8063, "sve_perm_variable_spec",                        "SVE variable permute operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_XPIPE_SPEC,                                   0x8064, "sve_xpipe_spec",                                "SVE cross-pipe operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_XPIPE_Z2R_SPEC,                               0x8065, "sve_xpipe_z2r_spec",                            "SVE vector to scalar cross-pipe operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_XPIPE_R2Z_SPEC,                               0x8066, "sve_xpipe_r2z_spec",                            "SVE scalar to vector cross-pipe operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_PGEN_NVEC_SPEC,                               0x8067, "sve_pgen_nvec_spec",                            "SVE predicate-only operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_PGEN_SPEC,                                    0x8068, "sve_pgen_spec",                                 "SVE predicate generating operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_PGEN_FLG_SPEC,                                0x8069, "sve_pgen_flg_spec",                             "SVE predicate flag setting operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_PGEN_CMP_SPEC,                                0x806a, "sve_pgen_cmp_spec",                             "SVE vector compare operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_PGEN_FCM_SPEC,                                0x806b, "sve_pgen_fcm_spec",                             "SVE floating-point vector compare operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_PGEN_LOGIC_SPEC,                              0x806c, "sve_pgen_logic_spec",                           "SVE predicate logical operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_PPERM_SPEC,                                   0x806d, "sve_pperm_spec",                                "SVE predicate permute operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_PSCAN_SPEC,                                   0x806e, "sve_pscan_spec",                                "SVE predicate scan operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_PCNT_SPEC,                                    0x806f, "sve_pcnt_spec",                                 "SVE predicate count operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_PLOOP_WHILE_SPEC,                             0x8070, "sve_ploop_while_spec",                          "SVE predicate loop while operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_PLOOP_TEST_SPEC,                              0x8071, "sve_ploop_test_spec",                           "SVE predicate loop test operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_PLOOP_ELTS_SPEC,                              0x8072, "sve_ploop_elts_spec",                           "SVE predicate loop elements speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_PLOOP_TERM_SPEC,                              0x8073, "sve_ploop_term_spec",                           "SVE predicate loop termination speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_PRED_SPEC,                                    0x8074, "sve_pred_spec",                                 "SVE predicated operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_PRED_EMPTY_SPEC,                              0x8075, "sve_pred_empty_spec",                           "SVE predicated operations with no active predicates speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_PRED_FULL_SPEC,                               0x8076, "sve_pred_full_spec",                            "SVE predicated operations speculatively executed with all active predicates")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_PRED_PARTIAL_SPEC,                            0x8077, "sve_pred_partial_spec",                         "SVE predicated operations speculatively executed with partially active predicates")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_UNPRED_SPEC,                                  0x8078, "sve_unpred_spec",                               "SVE unpredicated vector operations speculatively executed Counts speculatively executed SIMD data-processing and load/store operations due to SVE instructions without a governing predicate")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_PRED_NOT_FULL_SPEC,                           0x8079, "sve_pred_not_full_spec",                        "SVE predicated operations with empty or partially active predicates")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_MOVPRFX_SPEC,                                 0x807c, "sve_movprfx_spec",                              "SVE MOVPRFX operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_MOVPRFX_Z_SPEC,                               0x807d, "sve_movprfx_z_spec",                            "SVE MOVPRFX zeroing predication speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_MOVPRFX_M_SPEC,                               0x807e, "sve_movprfx_m_spec",                            "SVE MOVPRFX merging predication speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_MOVPRFX_U_SPEC,                               0x807f, "sve_movprfx_u_spec",                            "SVE  MOVPRFX unfused operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_LDST_SPEC,                                    0x8080, "sve_ldst_spec",                                 "SVE load/store operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_LD_SPEC,                                      0x8081, "sve_ld_spec",                                   "SVE load operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_ST_SPEC,                                      0x8082, "sve_st_spec",                                   "SVE store operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_PRF_SPEC,                                     0x8083, "sve_prf_spec",                                  "SVE prefetch operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_LDST_SPEC,                                0x8084, "ase_sve_ldst_spec",                             "ASE and SVE load/store operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_LD_SPEC,                                  0x8085, "ase_sve_ld_spec",                               "ASE and SVE load operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_ST_SPEC,                                  0x8086, "ase_sve_st_spec",                               "ASE and SVE store operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      PRF_SPEC,                                         0x8087, "prf_spec",                                      "Prefetch operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BASE_LDST_REG_SPEC,                               0x8088, "base_ldst_reg_spec",                            "General-purpose register load/store/prefetch operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BASE_LD_REG_SPEC,                                 0x8089, "base_ld_reg_spec",                              "General-purpose register load operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BASE_ST_REG_SPEC,                                 0x808a, "base_st_reg_spec",                              "General-purpose register store operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BASE_PRF_SPEC,                                    0x808b, "base_prf_spec",                                 "General-purpose prefetch operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      FPASE_LDST_REG_SPEC,                              0x808c, "fpase_ldst_reg_spec",                           "FP and ASE register load/store operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      FPASE_LD_REG_SPEC,                                0x808d, "fpase_ld_reg_spec",                             "FP and ASE register load operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      FPASE_ST_REG_SPEC,                                0x808e, "fpase_st_reg_spec",                             "FP and ASE register store operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_LDST_REG_SPEC,                                0x8090, "sve_ldst_reg_spec",                             "SVE unpredicated load/store register operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_LDR_REG_SPEC,                                 0x8091, "sve_ldr_reg_spec",                              "SVE unpredicated load register operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_STR_REG_SPEC,                                 0x8092, "sve_str_reg_spec",                              "SVE unpredicated store register operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_LDST_PREG_SPEC,                               0x8094, "sve_ldst_preg_spec",                            "SVE load/store predicate register operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_LDR_PREG_SPEC,                                0x8095, "sve_ldr_preg_spec",                             "SVE load predicate register operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_STR_PREG_SPEC,                                0x8096, "sve_str_preg_spec",                             "SVE store predicate register operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_LDST_ZREG_SPEC,                               0x8098, "sve_ldst_zreg_spec",                            "SVE load/store vector register operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_LDR_ZREG_SPEC,                                0x8099, "sve_ldr_zreg_spec",                             "SVE load vector register operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_STR_ZREG_SPEC,                                0x809a, "sve_str_zreg_spec",                             "SVE store vector register operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_LDST_CONTIG_SPEC,                             0x809c, "sve_ldst_contig_spec",                          "SVE contiguous load/store/prefetch element operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_LD_CONTIG_SPEC,                               0x809d, "sve_ld_contig_spec",                            "SVE contiguous load element operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_ST_CONTIG_SPEC,                               0x809e, "sve_st_contig_spec",                            "SVE contiguous store element operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_PRF_CONTIG_SPEC,                              0x809f, "sve_prf_contig_spec",                           "SVE contiguous prefetch element operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_LDSTNT_CONTIG_SPEC,                           0x80a0, "sve_ldstnt_contig_spec",                        "SVE non-temporal contiguous load/store element operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_LDNT_CONTIG_SPEC,                             0x80a1, "sve_ldnt_contig_spec",                          "SVE non-temporal contiguous load element operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_STNT_CONTIG_SPEC,                             0x80a2, "sve_stnt_contig_spec",                          "SVE non-temporal contiguous store element operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_LDST_MULTI_SPEC,                          0x80a4, "ase_sve_ldst_multi_spec",                       "ASE and SVE contiguous load/store multiple vector operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_LD_MULTI_SPEC,                            0x80a5, "ase_sve_ld_multi_spec",                         "ASE and SVE contiguous load multiple vector operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_ST_MULTI_SPEC,                            0x80a6, "ase_sve_st_multi_spec",                         "ASE and SVE contiguous store multiple vector operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_LDST_MULTI_SPEC,                              0x80a8, "sve_ldst_multi_spec",                           "SVE contiguous load/store multiple vector operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_LD_MULTI_SPEC,                                0x80a9, "sve_ld_multi_spec",                             "SVE contiguous load multiple vector operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_ST_MULTI_SPEC,                                0x80aa, "sve_st_multi_spec",                             "SVE contiguous store multiple vector operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_LDST_NONCONTIG_SPEC,                          0x80ac, "sve_ldst_noncontig_spec",                       "SVE non-contiguous load/store/prefetch operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_LD_GATHER_SPEC,                               0x80ad, "sve_ld_gather_spec",                            "SVE gather-load operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_ST_SCATTER_SPEC,                              0x80ae, "sve_st_scatter_spec",                           "SVE scatter-store operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_PRF_GATHER_SPEC,                              0x80af, "sve_prf_gather_spec",                           "SVE gather-prefetch operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_LDST64_NONCONTIG_SPEC,                        0x80b0, "sve_ldst64_noncontig_spec",                     "SVE 64-bit non-contiguous load/store/prefetch operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_LD64_GATHER_SPEC,                             0x80b1, "sve_ld64_gather_spec",                          "SVE 64-bit gather-load operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_ST64_SCATTER_SPEC,                            0x80b2, "sve_st64_scatter_spec",                         "SVE 64-bit scatter-store operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_PRF64_GATHER_SPEC,                            0x80b3, "sve_prf64_gather_spec",                         "SVE 64-bit gather-prefetch operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_UNALIGNED_LDST_SPEC,                      0x80b4, "ase_sve_unaligned_ldst_spec",                   "ASE and SVE unaligned accesses")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_UNALIGNED_LD_SPEC,                        0x80b5, "ase_sve_unaligned_ld_spec",                     "ASE and SVE unaligned read accesses")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_UNALIGNED_ST_SPEC,                        0x80b6, "ase_sve_unaligned_st_spec",                     "ASE and SVE unaligned write accesses")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_UNALIGNED_CONTIG_LDST_SPEC,               0x80b8, "ase_sve_unaligned_contig_ldst_spec",            "ASE and SVE unaligned contiguous accesses")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_UNALIGNED_CONTIG_LD_SPEC,                 0x80b9, "ase_sve_unaligned_contig_ld_spec",              "ASE and SVE unaligned contiguous read accesses")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_UNALIGNED_CONTIG_ST_SPEC,                 0x80ba, "ase_sve_unaligned_contig_st_spec",              "ASE and SVE unaligned contiguous write accesses")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_LDFF_SPEC,                                    0x80bc, "sve_ldff_spec",                                 "SVE first-fault load operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_LDFF_FAULT_SPEC,                              0x80bd, "sve_ldff_fault_spec",                           "SVE first-fault load operations speculatively executed which set FFR bit to 0")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      FP_SCALE_OPS_SPEC,                                0x80c0, "fp_scale_ops_spec",                             "Scalable floating-point element operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      FP_FIXED_OPS_SPEC,                                0x80c1, "fp_fixed_ops_spec",                             "Non-scalable floating-point element operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      FP_HP_SCALE_OPS_SPEC,                             0x80c2, "fp_hp_scale_ops_spec",                          "Scalable half-precision floating-point element operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      FP_HP_FIXED_OPS_SPEC,                             0x80c3, "fp_hp_fixed_ops_spec",                          "Non-scalable half-precision floating-point element operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      FP_SP_SCALE_OPS_SPEC,                             0x80c4, "fp_sp_scale_ops_spec",                          "Scalable single-precision floating-point element operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      FP_SP_FIXED_OPS_SPEC,                             0x80c5, "fp_sp_fixed_ops_spec",                          "Non-scalable floating-point single-precision floating-point element operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      FP_DP_SCALE_OPS_SPEC,                             0x80c6, "fp_dp_scale_ops_spec",                          "Scalable floating-point double-precision floating-point element operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      FP_DP_FIXED_OPS_SPEC,                             0x80c7, "fp_dp_fixed_ops_spec",                          "Non-scalable floating-point double-precision floating-point element operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      INT_SCALE_OPS_SPEC,                               0x80c8, "int_scale_ops_spec",                            "Scalable integer element operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      INT_FIXED_OPS_SPEC,                               0x80c9, "int_fixed_ops_spec",                            "Non-scalable integer element operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      LDST_SCALE_OPS_SPEC,                              0x80ca, "ldst_scale_ops_spec",                           "Scalable load/store element operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      LDST_FIXED_OPS_SPEC,                              0x80cb, "ldst_fixed_ops_spec",                           "Non-scalable load/store element operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      LD_SCALE_OPS_SPEC,                                0x80cc, "ld_scale_ops_spec",                             "Scalable load element operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      LD_FIXED_OPS_SPEC,                                0x80cd, "ld_fixed_ops_spec",                             "Non-scalable load element operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ST_SCALE_OPS_SPEC,                                0x80ce, "st_scale_ops_spec",                             "Scalable store element operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ST_FIXED_OPS_SPEC,                                0x80cf, "st_fixed_ops_spec",                             "Non-scalable store element operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      LDST_SCALE_BYTES_SPEC,                            0x80da, "ldst_scale_bytes_spec",                         "Scalable load/store bytes speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      LDST_FIXED_BYTES_SPEC,                            0x80db, "ldst_fixed_bytes_spec",                         "Non-scalable load/store bytes speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      LD_SCALE_BYTES_SPEC,                              0x80dc, "ld_scale_bytes_spec",                           "Scalable load bytes speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      LD_FIXED_BYTES_SPEC,                              0x80dd, "ld_fixed_bytes_spec",                           "Non-scalable load bytes speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ST_SCALE_BYTES_SPEC,                              0x80de, "st_scale_bytes_spec",                           "Scalable store bytes speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ST_FIXED_BYTES_SPEC,                              0x80df, "st_fixed_bytes_spec",                           "Non-scalable store bytes speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_INT8_SPEC,                                    0x80e1, "ase_int8_spec",                                 "Advanced SIMD 8-bit integer operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_INT8_SPEC,                                    0x80e2, "sve_int8_spec",                                 "SVE 8-bit integer operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_INT8_SPEC,                                0x80e3, "ase_sve_int8_spec",                             "Advanced SIMD and SVE 8-bit integer operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_INT16_SPEC,                                   0x80e5, "ase_int16_spec",                                "Advanced SIMD 16-bit integer operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_INT16_SPEC,                                   0x80e6, "sve_int16_spec",                                "SVE 16-bit integer operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_INT16_SPEC,                               0x80e7, "ase_sve_int16_spec",                            "Advanced SIMD and SVE 16-bit integer operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_INT32_SPEC,                                   0x80e9, "ase_int32_spec",                                "Advanced SIMD 32-bit integer operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_INT32_SPEC,                                   0x80ea, "sve_int32_spec",                                "SVE 32-bit integer operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_INT32_SPEC,                               0x80eb, "ase_sve_int32_spec",                            "Advanced SIMD and SVE 32-bit integer operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_INT64_SPEC,                                   0x80ed, "ase_int64_spec",                                "Advanced SIMD 64-bit integer operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_INT64_SPEC,                                   0x80ee, "sve_int64_spec",                                "SVE 64-bit integer operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_INT64_SPEC,                               0x80ef, "ase_sve_int64_spec",                            "Advanced SIMD and SVE 64-bit integer operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_FP_DOT_SPEC,                                  0x80f1, "ase_fp_dot_spec",                               "Advanced SIMD floating-point dot-product operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_FP_DOT_SPEC,                                  0x80f2, "sve_fp_dot_spec",                               "SVE floating-point dot-product operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_FP_DOT_SPEC,                              0x80f3, "ase_sve_fp_dot_spec",                           "Advanced SIMD and SVE floating-point dot-product operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_FP_MMLA_SPEC,                                 0x80f5, "ase_fp_mmla_spec",                              "Advanced SIMD floating-point matrix multiply operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_FP_MMLA_SPEC,                                 0x80f6, "sve_fp_mmla_spec",                              "SVE floating-point matrix multiply operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_FP_MMLA_SPEC,                             0x80f7, "ase_sve_fp_mmla_spec",                          "Advanced SIMD and SVE floating-point matrix multiply operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_INT_DOT_SPEC,                                 0x80f9, "ase_int_dot_spec",                              "Advanced SIMD integer dot-product operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_INT_DOT_SPEC,                                 0x80fa, "sve_int_dot_spec",                              "SVE integer dot-product operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_INT_DOT_SPEC,                             0x80fb, "ase_sve_int_dot_spec",                          "Advanced SIMD and SVE integer dot-product operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_INT_MMLA_SPEC,                                0x80fd, "ase_int_mmla_spec",                             "Advanced SIMD integer matrix multiply operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SVE_INT_MMLA_SPEC,                                0x80fe, "sve_int_mmla_spec",                             "SVE integer matrix multiply operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ASE_SVE_INT_MMLA_SPEC,                            0x80ff, "ase_sve_int_mmla_spec",                         "Advanced SIMD and SVE integer matrix multiply operations speculatively executed")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BR_SKIP_RETIRED,                                  0x8107, "br_skip_retired",                               "Instruction architecturally executed, branch not taken")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BR_IMMED_TAKEN_RETIRED,                           0x8108, "br_immed_taken_retired",                        "Instruction architecturally executed, immediate branch taken")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BR_IMMED_SKIP_RETIRED,                            0x8109, "br_immed_skip_retired",                         "Instruction architecturally executed, immediate branch not taken")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BR_IND_TAKEN_RETIRED,                             0x810a, "br_ind_taken_retired",                          "Instruction architecturally executed, indirect branch taken")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BR_IND_SKIP_RETIRED,                              0x810b, "br_ind_skip_retired",                           "Instruction architecturally executed, indirect branch not taken")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BR_INDNR_TAKEN_RETIRED,                           0x810c, "br_indnr_taken_retired",                        "Instruction architecturally executed, indirect branch taken excluding returns")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BR_INDNR_SKIP_RETIRED,                            0x810d, "br_indnr_skip_retired",                         "Instruction architecturally executed, indirect branch not taken excluding returns")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BR_RETURN_ANY_RETIRED,                            0x810e, "br_return_any_retired",                         "Instruction architecturally executed, procedure return")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BR_RETURN_SKIP_RETIRED,                           0x810f, "br_return_skip_retired",                        "Instruction architecturally executed, procedure return not taken")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BR_IMMED_PRED_RETIRED,                            0x8110, "br_immed_pred_retired",                         "Instruction architecturally executed, predicted immediate branch")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BR_IMMED_MIS_PRED_RETIRED,                        0x8111, "br_immed_mis_pred_retired",                     "Instruction architecturally executed, mispredicted immediate branch")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BR_IND_PRED_RETIRED,                              0x8112, "br_ind_pred_retired",                           "Instruction architecturally executed, predicted indirect branch")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BR_IND_MIS_PRED_RETIRED,                          0x8113, "br_ind_mis_pred_retired",                       "Instruction architecturally executed, mispredicted indirect branch")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BR_RETURN_PRED_RETIRED,                           0x8114, "br_return_pred_retired",                        "Instruction architecturally executed, predicted procedure return")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BR_RETURN_MIS_PRED_RETIRED,                       0x8115, "br_return_mis_pred_retired",                    "Instruction architecturally executed, mispredicted procedure return")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BR_INDNR_PRED_RETIRED,                            0x8116, "br_indnr_pred_retired",                         "Instruction architecturally executed, predicted indirect branch, excluding return")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BR_INDNR_MIS_PRED_RETIRED,                        0x8117, "br_indnr_mis_pred_retired",                     "Instruction architecturally executed, mispredicted indirect branch, excluding return")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BR_TAKEN_PRED_RETIRED,                            0x8118, "br_taken_pred_retired",                         "Instruction architecturally executed, predicted branch, taken")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BR_TAKEN_MIS_PRED_RETIRED,                        0x8119, "br_taken_mis_pred_retired",                     "Instruction architecturally executed, mispredicted branch, taken")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BR_SKIP_PRED_RETIRED,                             0x811a, "br_skip_pred_retired",                          "Instruction architecturally executed, predicted branch, not taken")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BR_SKIP_MIS_PRED_RETIRED,                         0x811b, "br_skip_mis_pred_retired",                      "Instruction architecturally executed, mispredicted branch, not taken")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BR_PRED_RETIRED,                                  0x811c, "br_pred_retired",                               "Instruction architecturally excecuted, predicted branch")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BR_IND_RETIRED,                                   0x811d, "br_ind_retired",                                "Instruction architecturally executed, indirect branch")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BR_INDNR_RETIRED,                                 0x811e, "br_indnr_retired",                              "Instruction architecturally executed, indirect branch excluding procedure return")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      BRB_FILTRATE,                                     0x811f, "brb_filtrate",                                  "Branch Record captured")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      INST_FETCH_PERCYC,                                0x8120, "inst_fetch_percyc",                             "Event in progress, INST_FETCH")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      MEM_ACCESS_RD_PERCYC,                             0x8121, "mem_access_rd_percyc",                          "Event in progress, MEM_ACCESS_RD")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      MEM_ACCESS_WR_PERCYC,                             0x8122, "mem_access_wr_percyc",                          "Event in progress, MEM_ACCESS_WR")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      MEM_ACCESS_PERCYC,                                0x8123, "mem_access_percyc",                             "Event in progress, MEM_ACCESS")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      INST_FETCH,                                       0x8124, "inst_fetch",                                    "Instruction memory access")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      DTLB_WALK_PERCYC,                                 0x8128, "dtlb_walk_percyc",                              "Event in progress, DTLB_WALK")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ITLB_WALK_PERCYC,                                 0x8129, "itlb_walk_percyc",                              "Event in progress, ITLB_WALK")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SAMPLE_FEED_BR,                                   0x812a, "sample_feed_br",                                "Statistical profiling sample taken, branch")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SAMPLE_FEED_LD,                                   0x812b, "sample_feed_ld",                                "Statistical profiling sample taken, load")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SAMPLE_FEED_ST,                                   0x812c, "sample_feed_st",                                "Statistical profiling sample taken, store")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SAMPLE_FEED_OP,                                   0x812d, "sample_feed_op",                                "Statistical profiling sample taken, matching operation type")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SAMPLE_FEED_EVENT,                                0x812e, "sample_feed_event",                             "Statistical profiling sample taken, matching events")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      SAMPLE_FEED_LAT,                                  0x812f, "sample_feed_lat",                               "Statistical profiling sample taken, exceeding minimum latency")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1D_TLB_RW,                                       0x8130, "l1d_tlb_rw",                                    "Level 1 data or unified TLB demand access")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1I_TLB_RD,                                       0x8131, "l1i_tlb_rd",                                    "Level 1 instruction TLB demand access")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1D_TLB_PRFM,                                     0x8132, "l1d_tlb_prfm",                                  "Level 1 data or unified TLB preload or prefetch")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1I_TLB_PRFM,                                     0x8133, "l1i_tlb_prfm",                                  "Level 1 instruction TLB preload or prefetch")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      DTLB_HWUPD,                                       0x8134, "dtlb_hwupd",                                    "Data TLB hardware update of translation table")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ITLB_HWUPD,                                       0x8135, "itlb_hwupd",                                    "Instruction TLB hardware update of translation table")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      DTLB_STEP,                                        0x8136, "dtlb_step",                                     "Data TLB translation table walk, step")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ITLB_STEP,                                        0x8137, "itlb_step",                                     "Instruction TLB translation table walk, step")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      DTLB_WALK_LARGE,                                  0x8138, "dtlb_walk_large",                               "Data TLB large page translation table walk")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ITLB_WALK_LARGE,                                  0x8139, "itlb_walk_large",                               "Instruction TLB large page translation table walk")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      DTLB_WALK_SMALL,                                  0x813a, "dtlb_walk_small",                               "Data TLB small page translation table walk")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ITLB_WALK_SMALL,                                  0x813b, "itlb_walk_small",                               "Instruction TLB small page translation table walk")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      DTLB_WALK_RW,                                     0x813c, "dtlb_walk_rw",                                  "Data TLB demand access with at least one translation table walk")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ITLB_WALK_RD,                                     0x813d, "itlb_walk_rd",                                  "Instruction TLB demand access with at least one translation table walk")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      DTLB_WALK_PRFM,                                   0x813e, "dtlb_walk_prfm",                                "Data TLB preload or prefetch with at least one translation table walk")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      ITLB_WALK_PRFM,                                   0x813f, "itlb_walk_prfm",                                "Instruction TLB preload or prefetch with at least one translation table walk")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1D_CACHE_RW,                                     0x8140, "l1d_cache_rw",                                  "Level 1 data or unified cache demand access")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1I_CACHE_RD,                                     0x8141, "l1i_cache_rd",                                  "Level 1 instruction cache demand access")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1D_CACHE_PRFM,                                   0x8142, "l1d_cache_prfm",                                "Level 1 data or unified cache preload or prefetch")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1I_CACHE_PRFM,                                   0x8143, "l1i_cache_prfm",                                "Level 1 instruction cache preload or prefetch")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1D_CACHE_MISS,                                   0x8144, "l1d_cache_miss",                                "Level 1 data or unified cache demand access miss")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1I_CACHE_HWPRF,                                  0x8145, "l1i_cache_hwprf",                               "Level 1 instruction cache hardware prefetch")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1D_CACHE_REFILL_PRFM,                            0x8146, "l1d_cache_refill_prfm",                         "Level 1 data or unified cache refill, preload or prefetch")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1I_CACHE_REFILL_PRFM,                            0x8147, "l1i_cache_refill_prfm",                         "Level 1 instruction cache refill, preload or prefetch")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L2D_CACHE_RW,                                     0x8148, "l2d_cache_rw",                                  "Level 2 data or unified cache demand access")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L2I_CACHE_RD,                                     0x8149, "l2i_cache_rd",                                  "Level 2 instruction cache demand access")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L2D_CACHE_PRFM,                                   0x814a, "l2d_cache_prfm",                                "Level 2 data or unified cache preload or prefetch")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L2I_CACHE_PRFM,                                   0x814b, "l2i_cache_prfm",                                "Level 2 instruction cache preload or prefetch")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L2D_CACHE_MISS,                                   0x814c, "l2d_cache_miss",                                "Level 2 data or unified cache demand access miss")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L2I_CACHE_HWPRF,                                  0x814d, "l2i_cache_hwprf",                               "Level 2 instruction cache hardware prefetch")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L2D_CACHE_REFILL_PRFM,                            0x814e, "l2d_cache_refill_prfm",                         "Level 2 data or unified cache refill, preload or prefetch")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L2I_CACHE_REFILL_PRFM,                            0x814f, "l2i_cache_refill_prfm",                         "Level 2 instruction cache refill, preload or prefetch")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L3D_CACHE_RW,                                     0x8150, "l3d_cache_rw",                                  "Level 3 data or unified cache demand access")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L3D_CACHE_PRFM,                                   0x8151, "l3d_cache_prfm",                                "Level 3 data or unified cache preload or prefetch")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L3D_CACHE_MISS,                                   0x8152, "l3d_cache_miss",                                "Level 3 data or unified cache demand access miss")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L3D_CACHE_REFILL_PRFM,                            0x8153, "l3d_cache_refill_prfm",                         "Level 3 data or unified cache refill, preload or prefetch")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L1D_CACHE_HWPRF,                                  0x8154, "l1d_cache_hwprf",                               "Level 1 data cache hardware prefetch")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L2D_CACHE_HWPRF,                                  0x8155, "l2d_cache_hwprf",                               "Level 2 data cache hardware prefetch")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      L3D_CACHE_HWPRF,                                  0x8156, "l3d_cache_hwprf",                               "Level 3 data cache hardware prefetch")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      STALL_FRONTEND_MEMBOUND,                          0x8158, "stall_frontend_membound",                       "Frontend stall cycles, memory bound")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      STALL_FRONTEND_L1I,                               0x8159, "stall_frontend_l1i",                            "Frontend stall cycles, level 1 instruction cache")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      STALL_FRONTEND_L2I,                               0x815a, "stall_frontend_l2i",                            "Frontend stall cycles, level 2 instruction or unified cache")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      STALL_FRONTEND_MEM,                               0x815b, "stall_frontend_mem",                            "Frontend stall cycles, last level PE cache or memory")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      STALL_FRONTEND_TLB,                               0x815c, "stall_frontend_tlb",                            "Frontend stall cycles, TLB")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      STALL_FRONTEND_CPUBOUND,                          0x8160, "stall_frontend_cpubound",                       "Frontend stall cycles, processor bound")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      STALL_FRONTEND_FLOW,                              0x8161, "stall_frontend_flow",                           "Frontend stall cycles, flow control")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      STALL_FRONTEND_FLUSH,                             0x8162, "stall_frontend_flush",                          "Frontend stall cycles, flush recovery")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      STALL_FRONTEND_RENAME,                            0x8163, "stall_frontend_rename",                         "Frontend stall cycles, rename full")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      STALL_BACKEND_MEMBOUND,                           0x8164, "stall_backend_membound",                        "Backend stall cycles, memory bound")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      STALL_BACKEND_L1D,                                0x8165, "stall_backend_l1d",                             "Backend stall cycles, level 1 data cache")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      STALL_BACKEND_L2D,                                0x8166, "stall_backend_l2d",                             "Backend stall cycles, level 2 data or unified cache")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      STALL_BACKEND_TLB,                                0x8167, "stall_backend_tlb",                             "Backend stall cycles, TLB")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      STALL_BACKEND_ST,                                 0x8168, "stall_backend_st",                              "Backend stall cycles, store")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      STALL_BACKEND_CPUBOUND,                           0x816a, "stall_backend_cpubound",                        "Backend stall cycles, processor bound")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      STALL_BACKEND_BUSY,                               0x816b, "stall_backend_busy",                            "Backend stall cycles, backend busy")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      STALL_BACKEND_ILOCK,                              0x816c, "stall_backend_ilock",                           "Backend stall cycles, input dependency")
WPERF_ARMV9_ARCH_EVENTS("armv9-a",      STALL_BACKEND_RENAME,                             0x816d, "stall_backend_rename",                          "Backend stall cycles, rename full")