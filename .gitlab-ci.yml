# BSD 3-Clause License
#
# Copyright (c) 2022, Arm Limited
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

default:
    tags:
        - win-arm64

stages:
- build
- test

# CI machines are not yet setup to run this
# sast:
#   stage: test
# include:
# - template: Security/SAST.gitlab-ci.yml

build_and_test:
  stage: build
  script:
    - cmd.exe /c "C:/wenv/arm64/activate.bat" powershell -Command "MSBuild /p:Configuration=Release /p:Platform=ARM64"
    - $env:PATH += ";C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\Extensions\TestPlatform\"; vstest.console.arm64.exe .\ARM64\Release\wperf-test.dll
  artifacts:
    paths:
      - wperf/ARM64/Release/wperf.exe
      - wperf-devgen/ARM64/Release/wperf-devgen.exe
      - wperf-driver/ARM64/Release/wperf-driver
      - wperf-driver/ARM64/Release/wperf-driver.cer
    expire_in: 20 min
  rules:
      - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

build_and_archive:
  stage: build
  script:
    - cmd.exe /c "C:/wenv/arm64/activate.bat" powershell -Command "MSBuild /p:Configuration=Release /p:Platform=ARM64"
    - >
      mkdir release;
      mkdir release/wperf-driver;
      cp wperf/ARM64/Release/wperf.exe release;
      cp wperf-driver/ARM64/Release/wperf-driver/* release/wperf-driver;
      cp wperf-driver/ARM64/Release/wperf-driver.pdb release/wperf-driver;
      cp wperf-devgen/ARM64/Release/wperf-devgen.exe release;
    - >
      $env:PATH += ";C:\wenv\arm64\python\tools";
      cp ci/ddf.py release;
      cp ci/wperf-driver.raw.ddf release;
      cd release;
      python ddf.py $(pwd);
      MakeCab /f wperf-driver.ddf;
      mv disk1/wperf-driver.cab wperf-driver/;
      rm -Force disk1;
      rm -Force ddf.py;
      rm -Force setup.inf;
      rm -Force setup.rpt;
      rm -Force wperf-driver.raw.ddf;
      rm -Force wperf-driver.ddf;
      cd ..;
    - $env:PATH += ";C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\Extensions\TestPlatform\"; vstest.console.arm64.exe .\ARM64\Release\wperf-test.dll
  artifacts:
    name: "$env:CI_JOB_STAGE-$env:CI_COMMIT_REF_NAME"
    paths:
      - release/
  rules:
      - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

test_driver:
  stage: test
  needs:
    - job: build_and_test
      artifacts: true
  script:
    # Command to create device node on CI machine
    # devgen /add /hardwareid "Root\WPERFDRIVER" /bus ROOT
    - >
      $env:PATH+=";C:\Program Files (x86)\Windows Kits\10\Tools\10.0.22621.0\arm64";
      cp wperf-driver\ARM64\Release\wperf-driver\* c:\ci\; 
      cp wperf-driver\ARM64\Release\wperf-driver.cer c:\ci\;
      cp wperf\ARM64\Release\wperf.exe c:\ci\;
      cp -Recurse -Force wperf-scripts\tests c:\ci\;
      cd c:\ci\;
      certutil -addstore root wperf-driver.cer;
      pnputil /add-driver .\wperf-driver.inf /install
    - >
      ls;
      $env:PATH += ";C:\wenv\arm64\python\tools";
      python -m pip install pytest;
      python -m pytest
  rules:
      - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
